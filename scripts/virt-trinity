#!/usr/bin/env python

import os
import sys

# Simple magic for using scripts within a source tree
base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if os.path.isdir(os.path.join(base_dir, 'virtTrinity')):
    sys.path.insert(0, base_dir)


def info(exctype, value, tb):
    if hasattr(sys, 'ps1') or not sys.stderr.isatty():
        # We are in interactive mode or we don't have a tty-like
        # device, so we call the default hook
        sys.__excepthook__(exctype, value, tb)
    else:
        import pdb
        import traceback
        # We are NOT in interactive mode, print the exception...
        traceback.print_exception(exctype, value, tb)
        print
        # ...then start the debugger in post-mortem mode.
        pdb.pm()

# Override exception hook to jump into pdb when exception
sys.excepthook = info

from virtTrinity.client import VirtTrinityApp  # NOQA

if __name__ == '__main__':
    app = VirtTrinityApp()
    sys.exit(app.run())
